from typing import Any
from .board_connected_item import BOARD_CONNECTED_ITEM


class ZONE(BOARD_CONNECTED_ITEM):

	def InitDataFromSrcInCopyCtor(self, aZone: "ZONE"):
		...

	def IsConflicting(self) -> bool:
		...

	def SetAssignedPriority(self, aPriority: int) -> None:
		...

	def GetAssignedPriority(self) -> int:
		...

	def HigherPriority(self, aOther: "ZONE") -> bool:
		...

	def SameNet(self, aOther: "ZONE") -> bool:
		...

	def GetZoneName(self) -> str:
		...

	def SetZoneName(self, aName: str) -> None:
		...

	def CacheBoundingBox(self) -> None:
		...

	def GetLocalClearance(self, *args) -> Any:
		...

	def SetLocalClearance(self, aClearance: Any) -> None:
		...

	def GetFirstLayer(self) -> Any:
		...

	def ViewGetLOD(self, aLayer, aView) -> Any:
		...

	def SetFillMode(self, aFillMode) -> Any:
		...

	def GetFillMode(self) -> Any:
		...

	def SetThermalReliefGap(self, aThermalReliefGap) -> Any:
		...

	def GetThermalReliefGap(self, *args) -> Any:
		...

	def SetThermalReliefSpokeWidth(self, aThermalReliefSpokeWidth) -> Any:
		...

	def GetThermalReliefSpokeWidth(self) -> Any:
		...

	def CalculateFilledArea(self) -> Any:
		...

	def CalculateOutlineArea(self) -> Any:
		...

	def GetFilledArea(self) -> Any:
		...

	def GetOutlineArea(self) -> Any:
		...

	def GetLock(self) -> Any:
		...

	def GetFillFlag(self, aLayer) -> Any:
		...

	def SetFillFlag(self, aLayer, aFlag) -> Any:
		...

	def IsFilled(self) -> Any:
		...

	def SetIsFilled(self, isFilled) -> Any:
		...

	def NeedRefill(self) -> Any:
		...

	def SetNeedRefill(self, aNeedRefill) -> Any:
		...

	def GetPadConnection(self) -> Any:
		...

	def SetPadConnection(self, aPadConnection) -> Any:
		...

	def GetMinThickness(self) -> Any:
		...

	def SetMinThickness(self, aMinThickness) -> Any:
		...

	def GetHatchThickness(self) -> Any:
		...

	def SetHatchThickness(self, aThickness) -> Any:
		...

	def GetHatchGap(self) -> Any:
		...

	def SetHatchGap(self, aStep) -> Any:
		...

	def GetHatchOrientation(self) -> Any:
		...

	def SetHatchOrientation(self, aStep) -> Any:
		...

	def GetHatchSmoothingLevel(self) -> Any:
		...

	def SetHatchSmoothingLevel(self, aLevel) -> Any:
		...

	def GetHatchSmoothingValue(self) -> Any:
		...

	def SetHatchSmoothingValue(self, aValue) -> Any:
		...

	def GetHatchHoleMinArea(self) -> Any:
		...

	def SetHatchHoleMinArea(self, aPct) -> Any:
		...

	def GetHatchBorderAlgorithm(self) -> Any:
		...

	def SetHatchBorderAlgorithm(self, aAlgo) -> Any:
		...

	def GetSelectedCorner(self) -> Any:
		...

	def SetSelectedCorner(self, aCorner) -> Any:
		...

	def GetLocalFlags(self) -> Any:
		...

	def SetLocalFlags(self, aFlags) -> Any:
		...

	def Outline(self, *args) -> Any:
		...

	def SetOutline(self, aOutline) -> Any:
		...

	def GetEffectiveShape(self, *args) -> Any:
		...

	def HitTestFilledArea(self, aLayer, aRefPos, aAccuracy=0) -> Any:
		...

	def HitTestCutout(self, aRefPos, aOutlineIdx=None, aHoleIdx=None) -> Any:
		...

	def GetInteractingZones(self, aLayer, aSameNetCollidingZones, aOtherNetIntersectingZones) -> Any:
		...

	def TransformSolidAreasShapesToPolygon(self, aLayer, aBuffer) -> Any:
		...

	def TransformSmoothedOutlineToPolygon(self, aBuffer, aClearance, aError, aErrorLoc, aBoardOutline) -> Any:
		...

	def TransformShapeToPolygon(self, aBuffer, aLayer, aClearance, aError, aErrorLoc, ignoreLineWidth=False) -> Any:
		...

	def HitTestForCorner(self, refPos, aAccuracy, aCornerHit=None) -> Any:
		...

	def HitTestForEdge(self, refPos, aAccuracy, aCornerHit=None) -> Any:
		...

	def HitTest(self, *args) -> Any:
		...

	def UnFill(self) -> Any:
		...

	def MoveEdge(self, offset, aEdge) -> Any:
		...

	def Mirror(self, aMirrorRef, aMirrorLeftRight) -> Any:
		...

	def GetNumCorners(self) -> Any:
		...

	def Iterate(self) -> Any:
		...

	def IterateWithHoles(self) -> Any:
		...

	def CIterateWithHoles(self) -> Any:
		...

	def RemoveAllContours(self) -> Any:
		...

	def GetCornerPosition(self, aCornerIndex) -> Any:
		...

	def SetCornerPosition(self, aCornerIndex, new_pos) -> Any:
		...

	def NewHole(self) -> Any:
		...

	def AppendCorner(self, aPosition, aHoleIdx, aAllowDuplication=False) -> Any:
		...

	def GetHatchStyle(self) -> Any:
		...

	def SetHatchStyle(self, aStyle) -> Any:
		...

	def IsSame(self, aZoneToCompare) -> Any:
		...

	def HasFilledPolysForLayer(self, aLayer) -> Any:
		...

	def GetFilledPolysList(self, aLayer) -> Any:
		...

	def GetFill(self, aLayer) -> Any:
		...

	def CacheTriangulation(self, aLayer=UNDEFINED_LAYER) -> Any:
		...

	def SetFilledPolysList(self, aLayer, aPolysList) -> Any:
		...

	def IsIsland(self, aLayer, aPolyIdx) -> Any:
		...

	def SetIsIsland(self, aLayer, aPolyIdx) -> Any:
		...

	def BuildSmoothedPoly(self, aSmoothedPoly, aLayer, aBoardOutline, aSmoothedPolyWithApron=None) -> Any:
		...

	def SetCornerSmoothingType(self, aType) -> Any:
		...

	def GetCornerSmoothingType(self) -> Any:
		...

	def SetCornerRadius(self, aRadius) -> Any:
		...

	def GetCornerRadius(self) -> Any:
		...

	def RemoveCutout(self, aOutlineIdx, aHoleIdx) -> Any:
		...

	def AddPolygon(self, *args) -> Any:
		...

	def IsTeardropArea(self) -> Any:
		...

	def SetTeardropAreaType(self, aType) -> Any:
		...

	def GetTeardropAreaType(self) -> Any:
		...

	def GetIsRuleArea(self) -> Any:
		...

	def GetDoNotAllowCopperPour(self) -> Any:
		...

	def GetDoNotAllowVias(self) -> Any:
		...

	def GetDoNotAllowTracks(self) -> Any:
		...

	def GetDoNotAllowPads(self) -> Any:
		...

	def GetDoNotAllowFootprints(self) -> Any:
		...

	def SetIsRuleArea(self, aEnable) -> Any:
		...

	def SetDoNotAllowCopperPour(self, aEnable) -> Any:
		...

	def SetDoNotAllowVias(self, aEnable) -> Any:
		...

	def SetDoNotAllowTracks(self, aEnable) -> Any:
		...

	def SetDoNotAllowPads(self, aEnable) -> Any:
		...

	def SetDoNotAllowFootprints(self, aEnable) -> Any:
		...

	def GetIslandRemovalMode(self) -> Any:
		...

	def SetIslandRemovalMode(self, aRemove) -> Any:
		...

	def GetMinIslandArea(self) -> Any:
		...

	def SetMinIslandArea(self, aArea) -> Any:
		...

	def GetBorderHatchPitch(self) -> Any:
		...

	def SetBorderDisplayStyle(self, aBorderHatchStyle, aBorderHatchPitch, aRebuilBorderdHatch) -> Any:
		...

	def SetBorderHatchPitch(self, aPitch) -> Any:
		...

	def UnHatchBorder(self) -> Any:
		...

	def HatchBorder(self) -> Any:
		...

	def GetHatchLines(self) -> Any:
		...

	def BuildHashValue(self, aLayer) -> Any:
		...

	def GetHashValue(self, aLayer) -> Any:
		...
