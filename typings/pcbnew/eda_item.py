from typing import Any, Sequence


class EDA_ITEM:

    def __init__(self, *args, **kwargs):
        ...

    def Type(self) -> "KICAD_T":
        ...

    def GetParent(self) -> "EDA_ITEM":
        ...

    def SetParent(self, aParent: "EDA_ITEM") -> None:
        ...

    def IsModified(self) -> bool:
        ...

    def IsNew(self) -> bool:
        ...

    def IsMoving(self) -> bool:
        ...

    def IsDragging(self) -> bool:
        ...

    def IsWireImage(self) -> bool:
        ...

    def IsSelected(self) -> bool:
        ...

    def IsEntered(self) -> bool:
        ...

    def IsResized(self) -> bool:
        ...

    def IsBrightened(self) -> bool:
        ...

    def SetWireImage(self) -> None:
        ...

    def SetSelected(self) -> None:
        ...

    def SetBrightened(self) -> None:
        ...

    def ClearSelected(self) -> None:
        ...

    def ClearBrightened(self) -> None:
        ...

    def SetModified(self) -> None:
        ...

    def GetState(self, type: "EDA_ITEM_FLAGS") -> int:
        ...

    def SetState(self, type: "EDA_ITEM_FLAGS", state: bool) -> None:
        ...

    def GetStatus(self) -> "EDA_ITEM_FLAGS":
        ...

    def SetStatus(self, aStatus: "EDA_ITEM_FLAGS") -> None:
        ...

    def SetFlags(self, aMask: "EDA_ITEM_FLAGS") -> None:
        ...

    def ClearFlags(self, *args) -> None:
        ...

    def GetFlags(self) -> "EDA_ITEM_FLAGS":
        ...

    def HasFlag(self, aFlag: "EDA_ITEM_FLAGS") -> bool:
        ...

    def GetEditFlags(self) -> "EDA_ITEM_FLAGS":
        ...

    def ClearTempFlags(self) -> None:
        ...

    def ClearEditFlags(self) -> None:
        ...

    def IsType(self, aScanTypes: Sequence["KICAD_T"]) -> bool:
        ...

    def SetForceVisible(self, aEnable: bool) -> None:
        ...

    def IsForceVisible(self) -> bool:
        ...

    def GetMsgPanelInfo(self, aFrame: "EDA_DRAW_FRAME", aList: Sequence["MSG_PANEL_ITEM"]) -> None:
        ...

    def HitTest(self, *args) -> bool:
        ...

    def GetBoundingBox(self) -> "EDA_RECT":
        ...

    def GetPosition(self) -> "wxPoint":
        ...

    def SetPosition(self, aPos: "wxPoint") -> None:
        ...

    def GetFocusPosition(self) -> "wxPoint":
        ...

    def Clone(self) -> "EDA_ITEM":
        ...

    def Visit(self, inspector: "INSPECTOR", testData: Any, scanTypes: Sequence["KICAD_T"]) -> "SEARCH_RESULT":
        ...

    def GetClass(self) -> str:
        ...

    def GetSelectMenuText(self, aUnits: "EDA_UNITS") -> str:
        ...

    def GetMenuImage(self) -> "BITMAPS":
        ...

    def Matches(self, aSearchData: "wxFindReplaceData", aAuxData: Any) -> bool:
        ...

    def Replace(self, *args) -> bool:
        ...

    def IsReplaceable(self) -> bool:
        ...

    def __lt__(self, aItem: "EDA_ITEM") -> bool:
        ...

    def ViewBBox(self) -> "BOX2I":
        ...

    def ViewGetLayers(self, aLayers: Sequence[int], aCount: int) -> None:
        ...

    @staticmethod
    def Sort(aLeft: "EDA_ITEM", aRight: "EDA_ITEM") -> bool:
        ...


from board_item import BOARD_ITEM
