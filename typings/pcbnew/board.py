from typing import Any, Iterable

from .footprint import FOOTPRINT
from .pcb_track import PCB_TRACK
from .pcb_group import PCB_GROUP
from .board_item_container import BOARD_ITEM_CONTAINER


# TODO
class BOARD(BOARD_ITEM_CONTAINER):

    def SetBoardUse(self, aUse) -> Any:
        ...

    def GetBoardUse(self) -> Any:
        ...

    def IncrementTimeStamp(self) -> Any:
        ...

    def GetTimeStamp(self) -> Any:
        ...

    def IsFootprintHolder(self) -> bool:
        ...

    def SetFileName(self, aFileName: str) -> None:
        ...

    def GetFileName(self) -> str:
        ...

    def Tracks(self, *args) -> Iterable[PCB_TRACK]:
        ...

    def Footprints(self, *args) -> Iterable[FOOTPRINT]:
        ...

    def Drawings(self, *args) -> Any:
        ...

    def Zones(self, *args) -> Any:
        ...

    def Markers(self, *args) -> Any:
        ...

    def Groups(self, *args) -> Iterable[PCB_GROUP]:
        ...

    def AllConnectedItems(self) -> Any:
        ...

    def GetProperties(self) -> Any:
        ...

    def SetProperties(self, aProps) -> Any:
        ...

    def ResolveTextVar(self, token, aDepth) -> Any:
        ...

    def IsEmpty(self) -> bool:
        ...

    def SetFileFormatVersionAtLoad(self, aVersion) -> Any:
        ...

    def GetFileFormatVersionAtLoad(self) -> Any:
        ...

    def SetGenerator(self, aGenerator) -> Any:
        ...

    def GetGenerator(self) -> Any:
        ...

    def FinalizeBulkAdd(self, aNewItems) -> Any:
        ...

    def FinalizeBulkRemove(self, aRemovedItems) -> Any:
        ...

    def CacheTriangulation(self, *args) -> Any:
        ...

    def GetFirstFootprint(self) -> Any:
        ...

    def DeleteAllFootprints(self) -> Any:
        ...

    def GetItem(self, aID) -> Any:
        ...

    def FillItemMap(self, aMap) -> Any:
        ...

    def ConvertCrossReferencesToKIIDs(self, aSource) -> Any:
        ...

    def ConvertKIIDsToCrossReferences(self, aSource) -> Any:
        ...

    def GetConnectivity(self) -> Any:
        ...

    def BuildConnectivity(self, aReporter=None) -> Any:
        ...

    def DeleteMARKERs(self, *args) -> Any:
        ...

    def GetProject(self) -> Any:
        ...

    def SetProject(self, aProject, aReferenceOnly=False) -> Any:
        ...

    def ClearProject(self) -> Any:
        ...

    def ResolveDRCExclusions(self) -> Any:
        ...

    def UpdateRatsnestExclusions(self) -> Any:
        ...

    def ResetNetHighLight(self) -> Any:
        ...

    def GetHighLightNetCodes(self) -> Any:
        ...

    def SetHighLightNet(self, aNetCode, aMulti=False) -> Any:
        ...

    def IsHighLightNetON(self) -> Any:
        ...

    def HighLightON(self, aValue=True) -> Any:
        ...

    def HighLightOFF(self) -> Any:
        ...

    def GetCopperLayerCount(self) -> Any:
        ...

    def SetCopperLayerCount(self, aCount) -> Any:
        ...

    def LayerDepth(self, aStartLayer, aEndLayer) -> Any:
        ...

    def GetEnabledLayers(self) -> Any:
        ...

    def SetEnabledLayers(self, aLayerMask) -> Any:
        ...

    def IsLayerEnabled(self, aLayer) -> Any:
        ...

    def IsLayerVisible(self, aLayer) -> Any:
        ...

    def GetVisibleLayers(self) -> Any:
        ...

    def SetVisibleLayers(self, aLayerMask) -> Any:
        ...

    def GetVisibleElements(self) -> Any:
        ...

    def SetVisibleElements(self, aMask) -> Any:
        ...

    def SetVisibleAlls(self) -> Any:
        ...

    def IsElementVisible(self, aLayer) -> Any:
        ...

    def SetElementVisibility(self, aLayer, aNewState) -> Any:
        ...

    def IsFootprintLayerVisible(self, aLayer) -> Any:
        ...

    def GetDesignSettings(self) -> Any:
        ...

    def GetTentVias(self) -> Any:
        ...

    def SetTentVias(self, aFlag) -> Any:
        ...

    def GetPageSettings(self) -> Any:
        ...

    def SetPageSettings(self, aPageSettings) -> Any:
        ...

    def GetPlotOptions(self) -> Any:
        ...

    def SetPlotOptions(self, aOptions) -> Any:
        ...

    def GetTitleBlock(self, *args) -> Any:
        ...

    def SetTitleBlock(self, aTitleBlock) -> Any:
        ...

    def GetBoardPolygonOutlines(self, aOutlines, aErrorHandler=None) -> Any:
        ...

    def ConvertBrdLayerToPolygonalContours(self, aLayer, aOutlines) -> Any:
        ...

    def GetLayerID(self, aLayerName: str) -> Any:
        ...

    def GetLayerName(self, aLayer) -> str:
        ...

    def SetLayerName(self, aLayer, aLayerName: str) -> Any:
        ...

    def SetLayerDescr(self, aIndex, aLayer) -> Any:
        ...

    def GetLayerType(self, aLayer) -> Any:
        ...

    def SetLayerType(self, aLayer, aLayerType) -> Any:
        ...

    def GetNodesCount(self, aNet=-1) -> Any:
        ...

    def GetPads(self) -> Any:
        ...

    def BuildListOfNets(self) -> Any:
        ...

    def FindNet(self, *args) -> Any:
        ...

    def GetNetInfo(self, *args) -> Any:
        ...

    def GetNetCount(self) -> Any:
        ...

    def ComputeBoundingBox(self, aBoardEdgesOnly=False) -> Any:
        ...

    def GetBoardEdgesBoundingBox(self) -> Any:
        ...

    def FindFootprintByReference(self, aReference) -> Any:
        ...

    def FindFootprintByPath(self, aPath) -> Any:
        ...

    def GetNetClassAssignmentCandidates(self) -> Any:
        ...

    def SynchronizeNetsAndNetClasses(self, aResetTrackAndViaSizes) -> Any:
        ...

    def SynchronizeProperties(self) -> Any:
        ...

    def SetAreasNetCodesFromNetNames(self) -> Any:
        ...

    def GetArea(self, index) -> Any:
        ...

    def GetZoneList(self, aIncludeZonesInFootprints=False) -> Any:
        ...

    def GetAreaCount(self) -> Any:
        ...

    def AddArea(self, aNewZonesList, aNetcode, aLayer, aStartPointPosition, aHatch) -> Any:
        ...

    def TestZoneIntersection(self, aZone1, aZone2) -> Any:
        ...

    def GetPadFast(self, aPosition, aLayerMask) -> Any:
        ...

    def GetPad(self, *args) -> Any:
        ...

    def GetSortedPadListByXthenYCoord(self, aVector, aNetCode=-1) -> Any:
        ...

    def GetTrackLength(self, aTrack) -> Any:
        ...

    def TracksInNet(self, aNetCode) -> Any:
        ...

    def GetFootprint(self, aPosition, aActiveLayer, aVisibleOnly, aIgnoreLocked=False) -> Any:
        ...

    def MapNets(self, aDestBoard) -> Any:
        ...

    def SanitizeNetcodes(self) -> Any:
        ...

    def AddListener(self, aListener) -> Any:
        ...

    def RemoveListener(self, aListener) -> Any:
        ...

    def RemoveAllListeners(self) -> Any:
        ...

    def OnItemChanged(self, aItem) -> Any:
        ...

    def OnItemsChanged(self, aItems) -> Any:
        ...

    def GroupsSanityCheck(self, repair=False) -> Any:
        ...

    def GroupsSanityCheckInternal(self, repair) -> Any:
        ...

    def GroupLegalOps(self, selection) -> Any:
        ...

    def __init__(self, *args) -> Any:
        ...

    def GetFootprints(self) -> Any:
        ...

    def GetDrawings(self) -> Any:
        ...

    def GetTracks(self) -> Any:
        ...

    def Save(self, filename) -> Any:
        ...

    def GetNetClasses(self) -> Any:
        ...

    def GetCurrentNetClassName(self) -> Any:
        ...

    def GetViasDimensionsList(self) -> Any:
        ...

    def GetTrackWidthList(self) -> Any:
        ...

    def GetNetsByName(self) -> Any:
        ...

    def GetNetsByNetcode(self) -> Any:
        ...

    def GetNetcodeFromNetname(self, netname) -> Any:
        ...

    def GetAllNetClasses(self) -> Any:
        ...
